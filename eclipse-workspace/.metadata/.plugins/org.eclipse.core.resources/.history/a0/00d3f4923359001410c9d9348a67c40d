package com.iparadigms.ipgrammar;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.languagetool.JLanguageTool;
import org.languagetool.Language;
import org.languagetool.rules.patterns.PatternRule;
import org.languagetool.rules.patterns.PatternRuleLoader;

public class RuleTestHelper {

    private Language _lang;
    private JLanguageTool _langTool;
    private final String RULES_FILENAME = "MyRules.xml";
    private List<PatternRule> _myRules;
    private final Logger LOG = Logger.getLogger(TextEngineServlet.class.getName());
    
    public RuleTestHelper(){
        _lang = Language.getLanguageForShortName(langCode).getClass().newInstance();
        _langTool = new JLanguageTool(_lang);
        
    }
    
    public void testAllRules(String text){
        //Load all rules
        _langTool.check(text);
      
    }
    public void testOneRule(PatternRule rule, String text){
        //Load one rule
        try {
            PatternRuleLoader ruleLoader = new PatternRuleLoader();
            _myRules = ruleLoader.getRules(
                TextEngineServlet.class.getResourceAsStream(RULES_FILENAME), RULES_FILENAME);
            for (PatternRule rule : _myRules) {
                _langTool.addRule(rule);
            }
        }catch (NullPointerException ex) { LOG.log(Level.INFO, ex.toString()); }
        _langTool.check(text)
        
    }
}
