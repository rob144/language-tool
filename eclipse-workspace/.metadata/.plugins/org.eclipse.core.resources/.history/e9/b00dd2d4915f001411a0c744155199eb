package com.iparadigms.ipgrammar;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;

public class POSDictionary {
    
    private final String dictionaryLocation = "grammar-webapp/src/com/iparadigms/ipgrammar/resources/dictionary.dump";
    private ArrayList<String[]> _posDictionary = new ArrayList<String[]>();
    
    public POSDictionary () throws FileNotFoundException, IOException {
        populatePosDictionary();
    }
    
    public boolean searchWord (String posWord) {
        boolean itemFound = false;
        
        for (String s[] : _posDictionary)
            if (s[0].equals(posWord))
               itemFound = true;
        
        return itemFound;
    }
    
    public void addWord (String wordData) {
        _posDictionary.add(wordData.split(" "));
    }
    
    public void addWord (String word, String lemma, String posTag) {
        _posDictionary.add(new String[]{word, lemma, posTag});
    }
    
    private void buildDictionary () throws Exception {
        File tempDump = new File ("temp.dump");
        FileWriter write = new FileWriter("temp.dump", false);
        PrintWriter printLine = new PrintWriter(write);
        String line = "";
        for (int x = 0; x < _posDictionary.size(); x++) {
            line = "";
            line = _posDictionary.get(x)[0] + "\t" + _posDictionary.get(x)[1] + "\t" + _posDictionary.get(x)[2] + "\n";
            //add to new dictionary.dump
        }
      //run dictionary build functionality found in UnitTests.java
        tempDump.delete();
    }
    
    private void populatePosDictionary () throws FileNotFoundException, IOException {
        String line = "";
        BufferedReader dictReader = new BufferedReader(new FileReader(dictionaryLocation));
        while ((line = dictReader.readLine()) != null){
            String[] items = line.split("\t");
            addWord (items[0], items[1], items[2]);
        }
            
        dictReader.close();
    }
}
